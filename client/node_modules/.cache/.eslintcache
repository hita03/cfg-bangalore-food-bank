[{"/Users/hitajuneja/Documents/GitHub/team-55/client/src/index.js":"1","/Users/hitajuneja/Documents/GitHub/team-55/client/src/App.js":"2","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Register.js":"3","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Login.js":"4","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Test.js":"5","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/LandingPage.js":"6","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/About.js":"7","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Starter.js":"8","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/Cart.js":"9","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Chart.js":"10","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Impact.js":"11","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/reducer.js":"12","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/products.js":"13","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/ContextCart.js":"14","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/Items.js":"15","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/Payment.js":"16"},{"size":601,"mtime":1656135243488,"results":"17","hashOfConfig":"18"},{"size":3378,"mtime":1656327541375,"results":"19","hashOfConfig":"18"},{"size":5356,"mtime":1656186969343,"results":"20","hashOfConfig":"18"},{"size":3588,"mtime":1656205321775,"results":"21","hashOfConfig":"18"},{"size":546,"mtime":1656133556953,"results":"22","hashOfConfig":"18"},{"size":1019,"mtime":1656134787624,"results":"23","hashOfConfig":"18"},{"size":4110,"mtime":1656186969342,"results":"24","hashOfConfig":"18"},{"size":1149,"mtime":1656186969343,"results":"25","hashOfConfig":"18"},{"size":2223,"mtime":1656327541385,"results":"26","hashOfConfig":"18"},{"size":610,"mtime":1656211416152,"results":"27","hashOfConfig":"18"},{"size":2647,"mtime":1656209945032,"results":"28","hashOfConfig":"18"},{"size":1606,"mtime":1656186969348,"results":"29","hashOfConfig":"18"},{"size":6149,"mtime":1656327541385,"results":"30","hashOfConfig":"18"},{"size":2987,"mtime":1656205321776,"results":"31","hashOfConfig":"18"},{"size":1136,"mtime":1656188788673,"results":"32","hashOfConfig":"18"},{"size":18991,"mtime":1656186969345,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1d5f3ql",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hitajuneja/Documents/GitHub/team-55/client/src/index.js",[],[],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/App.js",["86","87","88","89","90"],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Register.js",["91"],[],"import React from 'react'\nimport {useForm} from 'react-hook-form'\nimport axios from 'axios';\nimport {useNavigate} from 'react-router-dom'\n\n\nfunction Registration()\n{\n    const { register,handleSubmit,formState:{errors}}=useForm();\n    const navigate=useNavigate()\n\n    const onFormSubmit=(userData)=>{\n        // console.log(userData)\n        axios.post(\"http://localhost:5000/register\",userData)\n        .then((res)=>{\n            console.log(res)\n            navigate('/login')\n        })\n        .catch((err)=>{\n            console.log(err)\n            navigate('/')\n        })\n    }\n    return(\n        <div id=\"reg\">\n        <div className='container'>\n        <div className='row'>\n            <div className=\"col-11 col-sm-8 col-md-5 mx-auto mt-5 mb-4\">\n                <form className='border p-4 bg-secondary bg-opacity-50' onSubmit={handleSubmit(onFormSubmit)}>\n                  <div className='mb-3'>\n                  <p className='display-6'>Registration Form</p>\n                  </div>\n\n                    {/* username */}\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"un\"><em>Name</em></label>\n                        <input type=\"text\" id=\"un\" className=\"form-control\" {...register(\"username\", { required: true, minLength: 4 ,maxLength:10})} />\n                        {/* validation error msg for username */}\n                        {errors.username?.type === 'required' && <p className='text-danger'>* Username required</p>}\n                        {errors.username?.type === 'minLength' && <p className='text-danger'>* Min length should be 4</p>}\n                        {errors.username?.type === 'maxLength' && <p className='text-danger'>* Max length should be 10</p>}\n                    </div>\n                    {/* email */}\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"email\"><em>Email</em></label>\n                        <input type=\"email\" id=\"email\" className=\"form-control\" {...register(\"email\", { required: true })} />\n                        {/* validation error msg for email */}\n                        {errors.email?.type === 'required' && <p className='text-danger'>* Email required</p>}\n                    </div>\n                    {/* mobile number */}\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"number\"><em>Mobilenumber</em></label>\n                        <input type=\"number\" id=\"number\" className=\"form-control\" {...register(\"number\", { required: true })} />\n                        {/* validation error msg for number */}\n                        {errors.number?.type === 'required' && <p className='text-danger'>* Mobilenumber required</p>}\n                    </div>\n                    {/* password */}\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"pw\"><em>Password</em></label>\n                        <input type=\"password\" id=\"pw\" className=\"form-control\" {...register(\"password\", { required: true, minLength: 8 ,maxLength:16})} />\n                        {/* validation error msg for password */}\n                        {errors.password?.type === 'required' && <p className='text-danger'>* Password required</p>}\n                        {errors.password?.type === 'minLength' && <p className='text-danger'>* Min length should be 8</p>}\n                        {errors.password?.type === 'maxLength' && <p className='text-danger'>* Max length should be 16</p>}\n                    </div>\n                    {/* confirm password */}\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"pw\"><em>Confirm Password</em></label>\n                        <input type=\"password\" id=\"pw\" className=\"form-control\" {...register(\"password\", { required: true})} />\n                        {/* validation error msg for password */}\n                        {errors.password?.type === 'required' && <p className='text-danger'>* Confirm Password required</p>}\n                    </div>  \n                    <div className=\"mb-3\">\n                        <p>Are you:</p>\n                        <input type=\"checkbox\" id=\"singledonor\"  />\n                        <label for=\"singledonor\">Individual Donor</label>\n                        {/* validation error msg for password */}\n                        <input type=\"checkbox\" id=\"orgdonor\" />\n                        <label for=\"orgdonor\">Donor Organiszation</label>\n                    </div>       \n                    {/* terms and conditions */}\n                    <div className=\"mb-4\">\n                     <div className=\"form-check\">\n                            <input type=\"checkbox\" id=\"front-end\" className=\"form-check-input\" {...register(\"skills\")} value=\"front-end\" />\n                            <label htmlFor=\"front-end\" className=\"form-check-label\"><em>I accept all the <a href=\"#\">Terms and conditions</a></em></label>\n                        </div>\n                    </div>\n                    {/* submit button */}\n                    <div className='mb-0 text-center'>\n                    <button type=\"submit\" className=\"btn btn-success w-50 mb-1\">Register</button>                      \n                    </div>\n                </form>\n            </div>\n            </div>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Registration;","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Login.js",["92"],[],"import axios from 'axios';\nimport React from 'react'\nimport {useForm} from 'react-hook-form'\nimport {useNavigate} from 'react-router-dom'\n\nfunction Login()\n{\n    const { register,handleSubmit,formState:{errors}}=useForm();\n    const navigate=useNavigate()\n\n    const onFormSubmit=(userData)=>{\n        axios.post(\"http://localhost:5000/login\",userData)\n        .then((res)=>{\n            if(res.data){\n                console.log(\"usr data\",userData)\n                navigate(\"/fooddonation\",{params:{item: userData}});\n            } //then redirect to landing page\n            else{\n                navigate(\"/\");\n            }\n            console.log(res)\n        \n        })\n        .catch((err)=>console.log(err))\n        // console.log(userData)\n    }\n    return(\n        <div id=\"re\">\n        <div className=' login container-fluid'>\n            <div className='row'>\n\n            <div className = \" col-11 col-sm-8 col-md-4 mx-auto mt-5 mb-4\">\n                <form className='border p-4 bg-secondary bg-opacity-50 shadow' onSubmit={handleSubmit(onFormSubmit)}>\n                  <div className='mb-3'>\n                  <p className='display-5 '>Login</p>\n                  </div>\n                    {/* username */}\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"un\"><em>Username</em></label>\n                        <input type=\"text\" id=\"un\" className=\"form-control\" {...register(\"username\", { required: true, minLength: 6 ,maxLength:10})} />\n                        {/* validation error msg for username */}\n                        {errors.username?.type === 'required' && <p className='text-danger'>* Username required</p>}\n                        {errors.username?.type === 'minLength' && <p className='text-danger'>* Min length should be 6</p>}\n                        {errors.username?.type === 'maxLength' && <p className='text-danger'>* Max length should be 10</p>}\n                    </div>\n                    {/* password */}\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"password\"><em>Password</em></label>\n                        <input type=\"password\" id=\"password\" className=\"form-control\" {...register(\"password\", { required: true,maxLength:4, maxLength:8 })} />\n                        {/* validation error msg for password */}\n                        {errors.email?.type === 'required' && <p className='text-danger'>* Password required</p>}\n                        {errors.username?.type === 'minLength' && <p className='text-danger'>* Min length should be 4</p>}\n                        {errors.username?.type === 'maxLength' && <p className='text-danger'>* Max length should be 8</p>}\n                    </div>\n\n\n                    {/* login button */}\n                    <div className='mb-1 text-center'>\n                    <button type=\"submit\" className=\"btn btn-success w-50 mb-1\">Login</button>                      \n                    </div>\n                    <div className='row mt-3'>\n                        <div className='col-6 text-end mt-2'>\n                        <p>New User? </p>\n                        </div>\n                        <div className='col-6 text-start'>\n                        <button type=\"submit\" className=\"btn btn-success\"  onClick={()=>navigate('/register')}>SignUp</button>                          \n                        \n                        </div>\n                        \n                    </div>\n                </form>\n            </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;\n","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Test.js",[],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/LandingPage.js",[],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/About.js",[],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Starter.js",[],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/Cart.js",["93"],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Chart.js",[],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/Impact.js",[],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/reducer.js",[],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/products.js",[],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/ContextCart.js",["94","95","96"],[],"import React, { useContext, useEffect } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\nimport Items from \"./Items\";\nimport { CartContext } from \"./Cart\";\nimport cartimg from './images/cart.png';\n// import arrow from './images/arrow.png';\nimport axios from 'axios';\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport {useState} from 'react';\nimport StripeCheckout from \"react-stripe-checkout\";\nimport key from \"./keys.txt\";\n\nconst ContextCart = () => {\n  let navigate = useNavigate();\n  const { item, clearCart, totalItem, totalAmount } = useContext(CartContext);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/addcart\")\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err))\n\n\n  }, [])\n\n  function addCart() {\n    console.log(\"inside add cart\", totalAmount)\n    let data = {\n      donations: totalAmount,\n\n    }\n    axios.post(\"http://localhost:5000/addcart\", data)\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err))\n\n    navigate(\"/payment\");\n\n  }\n\n  const [grocery,setGrocery]=useState({\n    name: \"Dal\",\n    price: 70,\n    qty: 2,\n  });\n\n  async function handleToken(token, addresses) {\n    const response = await axios.post(\n      \"https://ry7v05l6on.sse.codesandbox.io/checkout\",\n      { token, grocery }\n    );\n    const { status } = response.data;\n    console.log(\"Response:\", response.data);\n    if (status === \"success\") {\n      console.log(\"success\");\n    } else {\n     console.log(\"fail\");\n    }\n  }\n\n\n  return (\n    <>\n      <header>\n        <div className=\"continue-shopping\">\n          {/* <img src={arrow} alt=\"arrow\" className=\"arrow-icon\" /> */}\n          {/* <h3>Grocery List</h3> */}\n        </div>\n\n        <div className=\"cart-icon\">\n          <img src={cartimg} alt=\"cart\" />\n          <p>{totalItem}</p>\n        </div>\n      </header>\n\n      <section className=\"main-cart-section\">\n        <h1>Grocery Items</h1>\n        <p className=\"total-items\">\n          You have <span className=\"total-items-count\">{totalItem} </span> grocery items\n          in shopping cart\n        </p>\n\n        <div className=\"cart-items\">\n          <div className=\"cart-items-container\">\n            <Scrollbars>\n              {item.map((curItem) => {\n                return <Items key={curItem.id} {...curItem} />;\n              })}\n            </Scrollbars>\n          </div>\n        </div>\n\n        <div className=\"card-total\">\n          <h3>\n            Total Donations: <span>₹{totalAmount}</span>\n          </h3>\n          {/* <button onClick={() => {\n            addCart()\n          }}>Checkout</button> */}\n          <StripeCheckout\n        stripeKey={key}\n        token={handleToken}\n        amount={totalAmount*100}\n        name=\"Donation\"\n        billingAddress\n        shippingAddress\n      />\n          <button className=\"clear-cart\" onClick={clearCart}>\n            Clear Cart\n          </button>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ContextCart;","/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/Items.js",[],[],"/Users/hitajuneja/Documents/GitHub/team-55/client/src/components/cart/Payment.js",["97","98"],[],{"ruleId":"99","severity":1,"message":"100","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":12},{"ruleId":"99","severity":1,"message":"103","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":12},{"ruleId":"99","severity":1,"message":"104","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":19},{"ruleId":"99","severity":1,"message":"105","line":14,"column":3,"nodeType":"101","messageId":"102","endLine":14,"endColumn":16},{"ruleId":"99","severity":1,"message":"106","line":15,"column":3,"nodeType":"101","messageId":"102","endLine":15,"endColumn":12},{"ruleId":"107","severity":1,"message":"108","line":85,"column":106,"nodeType":"109","endLine":85,"endColumn":118},{"ruleId":"110","severity":1,"message":"111","line":49,"column":142,"nodeType":"112","messageId":"113","endLine":49,"endColumn":151},{"ruleId":"99","severity":1,"message":"106","line":1,"column":55,"nodeType":"101","messageId":"102","endLine":1,"endColumn":64},{"ruleId":"99","severity":1,"message":"114","line":8,"column":10,"nodeType":"101","messageId":"102","endLine":8,"endColumn":18},{"ruleId":"99","severity":1,"message":"115","line":24,"column":12,"nodeType":"101","messageId":"102","endLine":24,"endColumn":19},{"ruleId":"99","severity":1,"message":"116","line":38,"column":18,"nodeType":"101","messageId":"102","endLine":38,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":68,"column":25,"nodeType":"109","endLine":68,"endColumn":7812},{"ruleId":"117","severity":1,"message":"118","line":69,"column":25,"nodeType":"109","endLine":69,"endColumn":6774},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Test' is defined but never used.","'LandingPage' is defined but never used.","'BrowserRouter' is defined but never used.","'useParams' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-dupe-keys","Duplicate key 'maxLength'.","ObjectExpression","unexpected","'Navigate' is defined but never used.","'addCart' is defined but never used.","'setGrocery' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]